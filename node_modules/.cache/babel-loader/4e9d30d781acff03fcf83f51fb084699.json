{"ast":null,"code":"var _jsxFileName = \"/Applications/www/adquirencia/src/component/Atoms.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react'; // @mui\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider as MUIThemeProvider } from '@mui/material/styles';\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ----------------------------------------------------------------------\nexport default function ThemeProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    themeMode,\n    themeDirection\n  } = useSettings();\n  const isLight = themeMode === 'light';\n  const themeOptions = useMemo(() => ({\n    palette: isLight ? { ...palette.light,\n      mode: 'light'\n    } : { ...palette.dark,\n      mode: 'dark'\n    },\n    shape,\n    typography,\n    direction: themeDirection,\n    shadows: isLight ? shadows.light : shadows.dark,\n    customShadows: isLight ? customShadows.light : customShadows.dark\n  }), [isLight, themeDirection]);\n  const theme = createTheme(themeOptions);\n  return /*#__PURE__*/_jsxDEV(MUIThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      m: 0,\n      p: 6,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Design System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeProvider, \"A3Dsd/fTdzAtKSt/Jvots6PL+bg=\", true);\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Applications/www/adquirencia/src/component/Atoms.tsx"],"names":["React","CssBaseline","createTheme","ThemeProvider","MUIThemeProvider","Box","children","themeMode","themeDirection","useSettings","isLight","themeOptions","useMemo","palette","light","mode","dark","shape","typography","direction","shadows","customShadows","theme"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,EAAoCC,aAAa,IAAIC,gBAArD,QAA6E,sBAA7E;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAIA;AAGA,eAAe,SAASF,aAAT,OAAyD;AAAA;;AAAA,MAAlC;AAAEG,IAAAA;AAAF,GAAkC;AACtE,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAgCC,WAAW,EAAjD;AACA,QAAMC,OAAO,GAAGH,SAAS,KAAK,OAA9B;AAEA,QAAMI,YAA0B,GAAGC,OAAO,CACxC,OAAO;AACLC,IAAAA,OAAO,EAAEH,OAAO,GAAG,EAAE,GAAGG,OAAO,CAACC,KAAb;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAAH,GAAyC,EAAE,GAAGF,OAAO,CAACG,IAAb;AAAmBD,MAAAA,IAAI,EAAE;AAAzB,KADpD;AAELE,IAAAA,KAFK;AAGLC,IAAAA,UAHK;AAILC,IAAAA,SAAS,EAAEX,cAJN;AAKLY,IAAAA,OAAO,EAAEV,OAAO,GAAGU,OAAO,CAACN,KAAX,GAAmBM,OAAO,CAACJ,IALtC;AAMLK,IAAAA,aAAa,EAAEX,OAAO,GAAGW,aAAa,CAACP,KAAjB,GAAyBO,aAAa,CAACL;AANxD,GAAP,CADwC,EASxC,CAACN,OAAD,EAAUF,cAAV,CATwC,CAA1C;AAYA,QAAMc,KAAK,GAAGpB,WAAW,CAACS,YAAD,CAAzB;AAEA,sBACE,QAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEW,KAAzB;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEK,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAW,MAAA,CAAC,EAAE,CAAd;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA1BuBnB,a;;KAAAA,a","sourcesContent":["import * as React from 'react'\n// @mui\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeOptions, ThemeProvider as MUIThemeProvider } from '@mui/material/styles';\nimport Box from \"@mui/material/Box\";\n\nimport theme from \"../theme\";\n\n// ----------------------------------------------------------------------\n\n\nexport default function ThemeProvider({ children }: ThemeProviderProps) {\n  const { themeMode, themeDirection } = useSettings();\n  const isLight = themeMode === 'light';\n\n  const themeOptions: ThemeOptions = useMemo(\n    () => ({\n      palette: isLight ? { ...palette.light, mode: 'light' } : { ...palette.dark, mode: 'dark' },\n      shape,\n      typography,\n      direction: themeDirection,\n      shadows: isLight ? shadows.light : shadows.dark,\n      customShadows: isLight ? customShadows.light : customShadows.dark,\n    }),\n    [isLight, themeDirection]\n  );\n\n  const theme = createTheme(themeOptions);\n\n  return (\n    <MUIThemeProvider theme={theme}>\n      <CssBaseline />\n         <Box m={0} p={6}>\n          <div>Design System</div>\n        </Box>\n    </MUIThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}